/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.50
 * Generated at: 2022-05-12 15:45:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user.gioi_002dthieu;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class van_002dchuyen_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<div id=\"content\" class=\"site-content\" tabindex=\"-1\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("		<nav class=\"woocommerce-breadcrumb\"><a href=\"https://ldstore.vn\">Trang chủ</a><span class=\"delimiter\"><i class=\"fa fa-angle-right\"></i></span>Chính sách vận chuyển, giao nhận</nav><div class=\"site-content-inner row\">\r\n");
      out.write("<div id=\"primary\" class=\"content-area\">\r\n");
      out.write("	<main id=\"main\" class=\"site-main\">\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("<article id=\"post-12147\" class=\"post-12147 page type-page status-publish hentry\">\r\n");
      out.write("\r\n");
      out.write("					<header class=\"entry-header\">\r\n");
      out.write("					<h1 class=\"entry-title\">Chính sách vận chuyển, giao nhận</h1>\r\n");
      out.write("									</header><!-- .entry-header -->\r\n");
      out.write("						<div class=\"entry-content\">\r\n");
      out.write("			\r\n");
      out.write("<h2><strong>1. Phạm vi</strong></h2>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<p> LD STORE  giao hàng toàn quốc.</p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<p>Ghi chú :&nbsp;<em>Miễn phí giao hàng đối với khách hàng đã thanh toán trước 100% sản phẩm, hoặc theo chính sách bán hàng của từng sản phẩm. Vui lòng gọi hotline để biết thêm thông tin.</em><br>&nbsp;&nbsp; &nbsp;<br><strong>2. Đối tác vận chuyển</strong></p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<p><strong>Áp dụng đối với các đơn hàng có thanh toán COD:</strong></p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; Chúng tôi đã hợp tác với các công ty chuyển phát hàng đầu Việt Nam<strong> :&nbsp; EMS BƯU ĐIỆN </strong>mang lại cho bạn dịch vụ vận chuyển chi phí thấp nhất với thời gian vận chuyển ngắn nhất. Giao hàng và thanh toán tận nơi.</p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"1024\" height=\"536\" src=\"https://ldstore.vn/wp-content/uploads/2019/06/article_1546251699_617-1024x536.jpg\" alt=\"\" class=\"wp-image-12162\" srcset=\"https://ldstore.vn/wp-content/uploads/2019/06/article_1546251699_617-1024x536.jpg 1024w, https://ldstore.vn/wp-content/uploads/2019/06/article_1546251699_617-scaled-600x314.jpg 600w, https://ldstore.vn/wp-content/uploads/2019/06/article_1546251699_617-300x157.jpg 300w, https://ldstore.vn/wp-content/uploads/2019/06/article_1546251699_617-768x402.jpg 768w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"></figure>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2><strong>3. Thời gian giao hàng</strong></h2>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<p><br> &nbsp;&nbsp; – Sau khi Order online và nhận được thông tin xác nhận đơn hàng, LD STORE sẽ sắp xếp giao hàng trong ngày cho quý khách.</p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<p> &nbsp;&nbsp;&nbsp;&nbsp; +&nbsp; Đối với khách hàng trong Hà Nội sẽ nhận hàng trong <strong>12h – 24h</strong>&nbsp;tùy địa điểm và thời gian giao hàng mà quí khách sắp xếp.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; +&nbsp; Đối với khách hàng ngoài Hà Nội sẽ nhận hàng từ&nbsp;&nbsp;<strong>1 – 5 ngày&nbsp;</strong>tùy khu vực xa hay gần.<br></p>\r\n");
      out.write("		</div><!-- .entry-content -->\r\n");
      out.write("			\r\n");
      out.write("</article><!-- #post-## -->\r\n");
      out.write("\r\n");
      out.write("	</main><!-- #main -->\r\n");
      out.write("</div><!-- #primary -->\r\n");
      out.write("\r\n");
      out.write("			</div>		</div><!-- .col-full -->\r\n");
      out.write("	</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
