/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.50
 * Generated at: 2022-05-12 15:45:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user.gioi_002dthieu;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class quy_002ddinh_002dthanh_002dtoan_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<div id=\"content\" class=\"site-content\" tabindex=\"-1\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("		<nav class=\"woocommerce-breadcrumb\"><a href=\"https://ldstore.vn\">Trang chủ</a><span class=\"delimiter\"><i class=\"fa fa-angle-right\"></i></span>Quy định và hình thức thanh toán</nav><div class=\"site-content-inner row\">\r\n");
      out.write("<div id=\"primary\" class=\"content-area\">\r\n");
      out.write("	<main id=\"main\" class=\"site-main\">\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("<article id=\"post-12151\" class=\"post-12151 page type-page status-publish hentry\">\r\n");
      out.write("\r\n");
      out.write("					<header class=\"entry-header\">\r\n");
      out.write("					<h1 class=\"entry-title\">Quy định và hình thức thanh toán</h1>\r\n");
      out.write("									</header><!-- .entry-header -->\r\n");
      out.write("						<div class=\"entry-content\">\r\n");
      out.write("			\r\n");
      out.write("<h1><strong>QUY ĐỊNH VÀ HÌNH THỨC THANH TOÁN</strong></h1>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2><strong>1. THANH TOÁN BẰNG TIỀN MẶT</strong></h2>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<p><em>Áp dụng khi&nbsp;<strong>mua hàng trực tiếp tại cửa hàng tại LD STORE </strong></em></p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<ul><li>Địa chỉ :&nbsp;<strong>157 Trần Quốc Hoàn  – Thành phố Hà Nội </strong></li><li>Số điện thoại liên hệ :&nbsp;<strong>0924049999</strong></li></ul>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2><strong>2. THANH TOÁN CHUYỂN KHOẢN</strong></h2>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<ul><li><strong>&nbsp;Ngân hàng Á châu ACB</strong> <ul><li>Số Tài Khoản:&nbsp;<strong>2469567</strong></li><li>Chủ Tài Khoản :&nbsp;<strong>NGUYỄN TÙNG LÂM</strong></li></ul></li></ul>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2><strong>3. THANH TOÁN COD</strong></h2>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<ul><li><strong>Thanh toán khi nhận hàng COD</strong></li></ul>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<p><em>Áp dụng khi bạn ở xa&nbsp;<strong>không thể mua hàng trực tiếp</strong> tại cửa hàng LD STORE </em></p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<p>Bạn có thể chọn hình thức thanh toán khi nhận hàng. LD STORE sẽ giao hàng cho bạn tại địa chỉ bạn cung cấp và nhận thanh toán ngay sau khi giao hàng. Tiện lợi và dễ dàng với các dịch vụ thu hộ được cung cấp bởi các đối tác giao hàng uy tín : <strong> EMS </strong></p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<ul><li><strong>Thanh toán qua thẻ ATM / VISA</strong></li></ul>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<p><em>Áp dụng khi&nbsp;<strong>mua hàng trực tiếp&nbsp;tại cửa hàng</strong> LD STORE </em></p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<p>LD STORE  liên kết với đối tác Mpos.vn hỗ trợ khách hàng thanh toán qua thẻ ngân hàng nhanh chóng và dễ dàng.</p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<p><strong>&nbsp;Mức biểu phí :</strong></p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<ul><li>Đối với thẻ đối với thể ATM : &nbsp;<strong>Miễn Phí</strong></li><li>Đối với thẻ Visa/Master Card :&nbsp;&nbsp;<strong>3%</strong></li><li>Đối với thẻ JCB/ UnionPay :&nbsp;<strong>3%</strong></li></ul>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<ul><li><strong>Thanh toán Trả Góp</strong> qua thẻ tín dụng visa , mastercard </li></ul>\r\n");
      out.write("		</div><!-- .entry-content -->\r\n");
      out.write("			\r\n");
      out.write("</article><!-- #post-## -->\r\n");
      out.write("\r\n");
      out.write("	</main><!-- #main -->\r\n");
      out.write("</div><!-- #primary -->\r\n");
      out.write("\r\n");
      out.write("			</div>		</div><!-- .col-full -->\r\n");
      out.write("	</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
